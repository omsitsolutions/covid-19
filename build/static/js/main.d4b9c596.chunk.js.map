{"version":3,"sources":["component/Panel.jsx","app/action.js","component/Global.jsx","component/India.jsx","component/Assam.jsx","component/About.jsx","App.js","app/reducer.js","app/store.js","serviceWorker.js","app/theme.js","index.js"],"names":["styles","root","display","justifyContent","flexDirection","flex","alignItems","alignSelf","padding","Panel","icon","title","caption","Paper","style","Icon","color","fontSize","Typography","variant","Intl","NumberFormat","maximumSignificantDigits","format","INDIA_API","useStyles","makeStyles","theme","mapDispatchToProps","fetchGlobalData","dispatch","type","payload","axios","get","ROOT_API","then","res","data","catch","err","console","log","finally","setLoading","value","connect","state","loading","global","summary","globalSummary","classes","useEffect","Grid","spacing","container","item","sm","md","xs","TotalConfirmed","TotalDeaths","TotalRecovered","Array","isArray","map","country","key","Country","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","className","heading","Chip","label","ExpansionPanelDetails","details","column","maximumFractionDigits","Divider","fetchIndia","Object","keys","confirmed","districtData","reduce","acc","b","deaths","a","deceased","recovered","districts","d","name","toString","forEach","error","india","indiaSummary","State","List","subheader","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","fetchAssam","Assam","Sonitpur","district","isLoadingIndia","assam","assamSummary","direction","justify","minHeight","CircularProgress","size","About","props","Card","CardHeader","CardContent","Avatar","src","component","IconButton","href","target","onClick","e","window","open","Link","flexGrow","main","menuButton","marginRight","toolbar","paddingTop","paddingBottom","appBar","top","bottom","BottomNav","useState","setValue","history","useHistory","AppBar","BottomNavigation","onChange","event","newValue","push","showLabels","BottomNavigationAction","mapDispatchToProp","setError","position","Toolbar","LinearProgress","lg","marginTop","marginBottom","exact","path","India","Global","Snackbar","anchorOrigin","vertical","horizontal","Boolean","autoHideDuration","onClose","message","action","Fragment","aria-label","initialState","createStore","Countries","composeWithDevTools","applyMiddleware","thunk","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","createMuiTheme","palette","teal","red","status","danger","ReactDOM","render","StrictMode","store","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d4b9c596.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Icon,\r\n    Paper,\r\n    Typography,\r\n    CardHeader\r\n} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst styles={\r\n    root:{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        flex:1,\r\n        alignItems:\"center\",\r\n        alignSelf: \"stretch\",\r\n        padding:\"16px 3px 16px 3px\"\r\n    }\r\n}\r\n//  export const Panel=({icon,title,caption})=>{\r\n//     return (\r\n//         <Card style={{flex:1,margin:10}}>\r\n//             <CardHeader title={new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format(title)} subheader={caption}/>\r\n//             <CardContent>\r\n//                 <Icon fontSize={\"large\"}  color={\"primary\"}>{icon}</Icon>\r\n//             </CardContent>\r\n//         </Card>\r\n//     )\r\n// }\r\nexport const Panel=({icon,title,caption})=>{\r\n    return (\r\n        //elevation 0 makes it look more equal in height due to no shadows\r\n        <Paper  style={styles.root}>\r\n            <Icon color={\"primary\"} fontSize={\"large\"}>{icon}</Icon>\r\n            <Typography variant={\"h6\"}>{new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format(title)}</Typography>\r\n            <Typography variant={\"caption\"}>{caption}</Typography>\r\n        </Paper>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\n//TYPES\r\nexport const FETCH_GLOBAL = \"FETCH_GLOBAL_REQUEST\";\r\nexport const FETCH_INDIA = \"FETCH_INDIA_REQUEST\";\r\nexport const FETCH_ASSAM = \"FETCH_ASSAM_REQUEST\";\r\nexport const LOADING = \"LOADING\";\r\nexport const ERROR = \"error\";\r\n\r\nconst ROOT_API = \"https://api.covid19api.com\";\r\nconst INDIA_API = \"https://api.covid19india.org/state_district_wise.json\";\r\n\r\nexport const setLoading = (value) => {\r\n    return dispatch=>{\r\n        dispatch({type:LOADING,payload:value})\r\n    }\r\n}\r\n\r\nexport const setError=(err)=>{\r\n    return dispatch=>{\r\n        dispatch({type:ERROR,payload:err})\r\n    }\r\n}\r\n\r\nexport const fetchGlobal = () => {\r\n    // console.log(\"fetching\")\r\n    return dispatch => {\r\n        dispatch({type: LOADING,payload:true})\r\n        axios.get(ROOT_API + \"/summary\")\r\n            .then(res => {\r\n                dispatch({type: FETCH_GLOBAL, payload: res.data})\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error \",err)\r\n                dispatch({type: ERROR, payload: \"Something went wrong\"})\r\n            })\r\n            .finally(()=>{\r\n                dispatch({type:LOADING,payload:false})\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchIndia = () => {\r\n    return dispatch => {\r\n        dispatch({type: LOADING,payload:true})\r\n        axios.get(INDIA_API)\r\n            .then(res => {\r\n                const data = Object.keys(res.data).map(state => {\r\n\r\n                    let confirmed = Object.keys(res.data[state].districtData).reduce((acc, b) => acc + res.data[state].districtData[b].confirmed, 0);\r\n                    let deaths = Object.keys(res.data[state].districtData).reduce((a, b) => a + res.data[state].districtData[b].deceased, 0)\r\n                    let recovered = Object.keys(res.data[state].districtData).reduce((a, b) => a + res.data[state].districtData[b].recovered, 0)\r\n                    let districts = Object.keys(res.data[state].districtData).map(d => ({\r\n                        name: d.toString(),\r\n                        ...res.data[state].districtData[d]\r\n                    }));\r\n\r\n                    return {\r\n                        state: state.toString(),\r\n                        confirmed,\r\n                        deaths,\r\n                        recovered,\r\n                        districts\r\n                    }\r\n                })\r\n                let confirmed = 0;\r\n                let deaths = 0;\r\n                let recovered = 0;\r\n                data.forEach(item => {\r\n                    confirmed += item.confirmed;\r\n                    deaths += item.deaths;\r\n                    recovered += item.recovered;\r\n                })\r\n                let summary = {\r\n                    confirmed,\r\n                    deaths,\r\n                    recovered\r\n                }\r\n                dispatch({type: FETCH_INDIA, payload: {data, summary}})\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                dispatch({type: ERROR, payload: \"Something went wrong\"})\r\n            })\r\n            .finally(()=>{\r\n                dispatch({type:LOADING,payload:false})\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchAssam = () => {\r\n    return dispatch => {\r\n        dispatch({type: LOADING,payload:true})\r\n        axios.get(INDIA_API)\r\n            .then(res => {\r\n              console.log('Testing log feature in React');\r\n              console.log(res.data);\r\n              console.log(res.data.Assam);\r\n              console.log(res.data.Assam.districtData);\r\n              console.log(res.data.Assam.districtData.Sonitpur);\r\n              console.log(res.data.Assam.districtData.Sonitpur.confirmed);\r\n              console.log(Object.keys(res.data));\r\n              //const data = Object.keys(res.data.Assam);\r\n                const data = Object.keys(res.data.Assam.districtData).map(function(district)  {\r\n\r\n                    let confirmed = res.data.Assam.districtData[district].confirmed;\r\n                    let deaths =  res.data.Assam.districtData[district].deceased;\r\n                    let recovered = res.data.Assam.districtData[district].recovered;\r\n                    console.log(confirmed+'-'+deaths+'-'+recovered);\r\n                    let districts = Object.keys(res.data.Assam.districtData).map(d => ({\r\n                        name: d.toString(),\r\n                        ...res.data.Assam\r\n                    }));\r\n\r\n                    return {\r\n                        district: district.toString(),\r\n                        confirmed,\r\n                        deaths,\r\n                        recovered,\r\n                        districts\r\n                    }\r\n                })\r\n                console.log( data);\r\n                let confirmed = 0;\r\n                let deaths = 0;\r\n                let recovered = 0;\r\n                data.forEach(item => {\r\n                    confirmed += item.confirmed;\r\n                    deaths += item.deaths;\r\n                    recovered += item.recovered;\r\n                })\r\n                let summary = {\r\n                    confirmed,\r\n                    deaths,\r\n                    recovered\r\n                }\r\n                dispatch({type: FETCH_ASSAM, payload: {data, summary}})\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                dispatch({type: ERROR, payload: \"Something went wrong\"})\r\n            })\r\n            .finally(()=>{\r\n                dispatch({type:LOADING,payload:false})\r\n            })\r\n    }\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {Panel} from \"./Panel\";\r\nimport {fetchGlobal, setLoading} from \"../app/action\";\r\nimport {connect} from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst mapStateToProps = state => ({loading: state.loading, global: state.global, summary: state.globalSummary})\r\nconst mapDispatchToProps = {\r\n    fetchGlobalData: fetchGlobal,\r\n    setLoading,\r\n}\r\n\r\nfunction Global({loading, fetchGlobalData, global = [], summary}) {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        fetchGlobalData()\r\n    }, [])\r\n\r\n    if (loading === true) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Grid  spacing={2} container={true}>\r\n            <Grid item={true}  sm={12} md={12} xs={12}>\r\n                <Grid spacing={2} container={true}>\r\n                    <Grid container item xs={4} sm={4} md={4}>\r\n                        <Panel icon={\"accessible\"} caption={\"Confirmed case\"} title={summary.TotalConfirmed}/>\r\n                    </Grid>\r\n                    <Grid container item xs={4} sm={4} md={4}>\r\n                        <Panel icon={\"sentiment_very_dissatisfied\"} caption={\"Deaths\"} title={summary.TotalDeaths}/>\r\n                    </Grid>\r\n                    <Grid container={true} item xs={4} sm={4} md={4}>\r\n                        <Panel icon={\"healing\"} caption={\"Recovered\"} title={summary.TotalRecovered}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid md={12} sm={12} xs={12}>\r\n                {Array.isArray(global) && global.map(country => (\r\n                    //need to add key for react lists\r\n                    <div key={country.Country}>\r\n                        <ExpansionPanel>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon/>}\r\n                                aria-controls=\"panel1c-content\"\r\n                                id=\"panel1c-header\"\r\n                            >\r\n                                <Typography style={{flex: 1}}>{country.Country}</Typography>\r\n\r\n                                <div>\r\n                                    <Typography className={classes.heading}>Confirmed Case</Typography>\r\n                                    <Chip color={\"primary\"}\r\n                                          label={new Intl.NumberFormat('en-IN', {maximumSignificantDigits: 3}).format(country.TotalConfirmed)}/>\r\n                                </div>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails className={classes.details}>\r\n                                <div className={classes.column}>\r\n                                    <Typography className={classes.heading}>Country: {country.Country}</Typography>\r\n                                </div>\r\n\r\n                                <div className={classes.column}>\r\n                                    <Typography className={classes.heading}>Confirmed Case\r\n                                        : {new Intl.NumberFormat('en-IN', {maximumFractionDigits: 3}).format(country.TotalConfirmed)}</Typography>\r\n                                    <Typography className={classes.heading}>Deaths\r\n                                        : {new Intl.NumberFormat('en-IN', {maximumFractionDigits: 3}).format(country.TotalDeaths)}</Typography>\r\n                                    <Typography className={classes.heading}>Recovered\r\n                                        : {new Intl.NumberFormat('en-IN', {maximumFractionDigits: 3}).format(country.TotalRecovered)}</Typography>\r\n                                </div>\r\n\r\n                            </ExpansionPanelDetails>\r\n                            <Divider/>\r\n                        </ExpansionPanel>\r\n                    </div>\r\n                ))}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Global)\r\n","import React, {useEffect} from \"react\";\r\nimport {fetchIndia} from \"../app/action\";\r\nimport {connect} from 'react-redux';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport {Panel} from \"./Panel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst mapStateToProps = state => ({loading: state.loading, india: state.india, summary: state.indiaSummary})\r\nconst mapDispatchToProps = {fetchIndia}\r\n\r\nconst India = ({loading, india = {}, fetchIndia, summary}) => {\r\n    useEffect(() => {\r\n        fetchIndia()\r\n    }, [])\r\n\r\n    if (loading === true) {\r\n        return null\r\n    }\r\n    return (\r\n        <>\r\n            <Grid spacing={2} container={true}>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <Grid spacing={2} container={true}>\r\n                        <Grid container={true} xs={4} item={true}>\r\n                            {!loading && <Panel icon={\"accessible\"} caption={\"Confirmed case\"} title={summary.confirmed}/> }\r\n                        </Grid>\r\n                        <Grid xs={4} container={true} item={true}>\r\n                            {!loading && <Panel icon={\"sentiment_very_dissatisfied\"} caption={\"Deaths\"} title={summary.deaths}/> }\r\n                        </Grid>\r\n                        <Grid xs={4} container={true} item={true}>\r\n                            {!loading && <Panel icon={\"healing\"} caption={\"Recovered\"} title={summary.recovered}/>}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    {Array.isArray(india) && india.map(state => (\r\n                        <ExpansionPanel key={state.State}>\r\n                            <ExpansionPanelSummary\r\n                                expandIcon={<ExpandMoreIcon/>}\r\n                                aria-controls=\"panel1c-content\"\r\n                                id=\"panel1c-header\"\r\n                            >\r\n                                <Typography style={{flex: 1}}>{state.state}</Typography>\r\n\r\n                                <div>\r\n                                    <Typography>Confirmed Case</Typography>\r\n                                    <Chip color={\"primary\"} label={state.confirmed}/>\r\n                                </div>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n\r\n                                <List style={{flex: 1}} title={\"District wise\"} subheader={\"District wise\"}>\r\n                                    {state.districts.map(d => (\r\n                                        //need key here also\r\n                                        <ListItem key={d.name}>\r\n                                            <ListItemText primary={d.name}\r\n                                                          secondary={`Death: ${d.deceased}  Recovered : ${d.recovered}`}/>\r\n                                            <ListItemSecondaryAction>\r\n                                                <Chip color={\"primary\"}\r\n                                                      label={`Confirmed: ${new Intl.NumberFormat(\"en-IN\", {maximumSignificantDigits: 3}).format(d.confirmed)}`}/>\r\n                                            </ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </List>\r\n\r\n\r\n                            </ExpansionPanelDetails>\r\n                            <Divider/>\r\n                        </ExpansionPanel>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(India)\r\n","import React, {useEffect} from \"react\";\r\nimport {fetchAssam} from \"../app/action\";\r\nimport {connect} from 'react-redux';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport {Panel} from \"./Panel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\n\r\nconst mapStateToProps = state => ({loading: state.isLoadingIndia, assam: state.assam, summary: state.assamSummary})\r\nconst mapDispatchToProps = {fetchAssam}\r\n\r\nconst Assam = ({loading, assam = {}, fetchAssam, summary}) => {\r\n    useEffect(() => {\r\n        fetchAssam()\r\n    }, [])\r\n\r\n    if(loading === true) {\r\n        return (\r\n            <Grid\r\n                container={true}\r\n                spacing={10}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                //minHeight 100vh is too low\r\n                style={{ minHeight: '50vh'}}\r\n            >\r\n                <CircularProgress size={60}/>\r\n            </Grid>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container={true}>\r\n\r\n                <Grid xs={4} item={true}>\r\n                    <Panel icon={\"accessible\"} caption={\"Confirmed case\"} title={summary.confirmed}/>\r\n\r\n                </Grid>\r\n\r\n                <Grid xs={4} item={true}>\r\n                    <Panel icon={\"healing\"} caption={\"Recovered\"} title={summary.recovered}/>\r\n\r\n                </Grid>\r\n                <Grid xs={4} item={true}>\r\n                    <Panel icon={\"sentiment_very_dissatisfied\"} caption={\"Deceased\"} title={summary.deaths}/>\r\n\r\n                </Grid>\r\n            </Grid>\r\n            {Array.isArray(assam) && assam.map(state => (\r\n                <ExpansionPanel key={state.district}>\r\n                    <ExpansionPanelSummary\r\n\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                    >\r\n                        <Typography style={{flex: 0.75}}>{state.district}</Typography>\r\n\r\n                        <div style={{flex: 0.1}}>\r\n                            <Typography>Confirmed </Typography>\r\n                            <Chip color={\"primary\"} label={state.confirmed}/>\r\n                        </div>\r\n                        <div style={{flex: 0.1}}>\r\n                            <Typography>Recovered </Typography>\r\n                            <Chip color={\"primary\"} label={state.recovered}/>\r\n                        </div>\r\n                        <div>\r\n                            <Typography>Deceased </Typography>\r\n                            <Chip color={\"primary\"} label={state.deaths}/>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n\r\n                        <List style={{flex: 1}} title={\"District wise\"} subheader={\"District wise\"}>\r\n\r\n                        </List>\r\n\r\n\r\n                    </ExpansionPanelDetails>\r\n                    <Divider/>\r\n                </ExpansionPanel>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Assam)\r\n","import React from \"react\";\r\nimport {Card,Avatar,Link, CardContent, CardHeader, Divider, Grid, Icon, IconButton, Typography} from \"@material-ui/core\";\r\n\r\n\r\nexport const About = (props) => {\r\n    return (\r\n        <Grid spacing={true} container={true}>\r\n            <Grid xs={12} item={true}>\r\n                <Card>\r\n                    <CardHeader title={\"OMS IT SOLUTIONS\"}/>\r\n                    <CardContent>\r\n\r\n                        <Avatar src={\"https://scontent-maa2-1.xx.fbcdn.net/v/t1.0-9/91262172_3588150361255721_2874790871578968064_o.jpg?_nc_cat=106&_nc_sid=09cbfe&_nc_ohc=dHh43fuK8n0AX_6fRWr&_nc_ht=scontent-maa2-1.xx&oh=34d01c08e9da9ed2843962fc4e053f72&oe=5EE0AD76\"}/>\r\n                        <Typography variant={\"subtitle1\"}>Simpilfy your life. Life is precious!!!</Typography>\r\n                        <Typography variant={\"caption\"} component={\"p\"}>Follow me</Typography>\r\n                        <IconButton color={\"primary\"} href={\"\"} target={\"_blank\"} onClick={e=>{\r\n                            window.open(\"https://www.facebook.com/omsitsolutions\", \"_blank\")\r\n                        }}>\r\n                            <Icon fontSize={\"default\"} className=\"fa fa-facebook-f\"/>\r\n                        </IconButton>\r\n                        <IconButton color={\"primary\"} href={\"\"} target={\"_blank\"} onClick={e=>{\r\n                            window.open(\"http://omsitsolutions.com\",\"_blank\")\r\n                        }}>\r\n                            <Icon fontSize={\"default\"} className=\"fa fa-globe\"/>\r\n                          </IconButton>\r\n                        <IconButton color={\"primary\"} href={\"\"} target={\"_blank\"} onClick={e=>{\r\n                            window.open(\"https://g.page/omsitsolutions\",\"_blank\")\r\n                        }}>\r\n                            <Icon fontSize={\"default\"} className=\"fa fa-google\"/>\r\n                        </IconButton>\r\n\r\n                        \r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid xs={12} item={true}>\r\n                <Divider/>\r\n            </Grid>\r\n            <Grid xs={12} item={true}>\r\n                <Card>\r\n                    <CardHeader title={\"Resource\"}/>\r\n                    <CardContent>\r\n                        <Typography   variant={\"subtitle1\"}>Material UI: <Link href=\"https://material-ui.com\">\r\n                            https://material-ui.com\r\n                        </Link>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport {    AppBar,BottomNavigation,BottomNavigationAction,Grid,Icon,IconButton,Toolbar,Snackbar,SnackbarContent,Typography} from \"@material-ui/core\";\r\nimport {Route, Switch,Link, useHistory} from \"react-router-dom\";\r\nimport Global from \"./component/Global\";\r\nimport India from \"./component/India\";\r\nimport Assam from \"./component/Assam\";\r\nimport {About} from \"./component/About\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport WorldIcon from '@material-ui/icons/Language'\r\nimport PinIcon from '@material-ui/icons/PinDrop'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {connect} from \"react-redux\";\r\nimport {setError, setLoading} from \"./app/action\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    main: {\r\n        flex: 1\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    toolbar: {\r\n        minHeight: 128,\r\n        alignItems: 'flex-start',\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        top: \"auto\",\r\n        bottom: 0\r\n    }\r\n}));\r\n\r\nconst BottomNav = () => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const history = useHistory();\r\n    return (\r\n        <AppBar color=\"primary\" className={classes.appBar}>\r\n            <BottomNavigation\r\n                value={value}\r\n                onChange={(event, newValue) => {\r\n                    switch (newValue) {\r\n                        case 0:\r\n                            console.log(\"/assam\");\r\n                            history.push(\"/assam\");\r\n                            break;\r\n                        case 1:\r\n                            console.log(\"/india\");\r\n                            history.push(\"/india\");\r\n                            break;\r\n                        case 2:\r\n                            console.log(\"/global\");\r\n                            history.push(\"/global\");\r\n                            break\r\n                        case 3:\r\n                            console.log(\"/about\");\r\n                            history.push(\"/about\");\r\n                            break\r\n                    }\r\n                    setValue(newValue);\r\n                }}\r\n                showLabels\r\n            >\r\n                <BottomNavigationAction label=\"Assam\" icon={<PinIcon/>}/>\r\n                <BottomNavigationAction label=\"India\" icon={<PinIcon/>}/>\r\n                <BottomNavigationAction label=\"Global\" icon={<WorldIcon/>}/>\r\n                <BottomNavigationAction label=\"About\" icon={<InfoIcon/>}/>\r\n\r\n            </BottomNavigation>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\n\r\nfunction App({loading,error,setError}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Grid spacing={4} container={true}>\r\n            <Grid sm={12} md={12} xs={12} style={{flexGrow: 1}} item={true}>\r\n                <AppBar position={\"fixed\"}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            COVID-19 Tracker\r\n                        </Typography>\r\n                        <IconButton color={\"inherit\"} href={\"\"} target={\"_blank\"}\r\n                                    onClick={e => window.open(\"https://g.page/omsitsolutions\", \"_blank\")}>\r\n                            <Icon fontSize={\"default\"} className=\"fa fa-google\"/>\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                    {loading && <LinearProgress color={\"secondary\"} variant=\"indeterminate\"/>}\r\n                </AppBar>\r\n            </Grid>\r\n            <Grid xs={12} sm={12} md={12} lg={12} style={{marginTop: 50, marginBottom: 50}} item={true}>\r\n\r\n                <Switch>\r\n\r\n\r\n                    <Route exact={true} path={\"/assam\"} component={Assam}/>\r\n                    <Route exact={true} path={\"/india\"} component={India}/>\r\n                    <Route exact={true} path={\"/global\"} component={Global}/>\r\n                    <Route exact={true} path={\"/about\"} component={About}/>\r\n                    <Route exact={true} path={\"\"} component={Assam}/>\r\n\r\n                </Switch>\r\n            </Grid>\r\n\r\n            <Grid sm={12} item={true}>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={Boolean(error)}\r\n                    autoHideDuration={6000}\r\n                    onClose={e => setError(null)}\r\n                    message={Boolean(error)?error.toString():\"\"}\r\n                    action={\r\n                        <React.Fragment>\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={e=>setError(null)}>\r\n                                <Icon fontSize=\"small\">close</Icon>\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                />\r\n                <BottomNav/>\r\n\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({loading: state.loading,error:state.error})\r\nconst mapDispatchToProp = {\r\n    setError\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProp)(App);\r\n","import {\r\n    ERROR,\r\n    FETCH_GLOBAL, FETCH_INDIA,FETCH_ASSAM,\r\n    LOADING\r\n} from \"./action\";\r\n\r\nconst initialState = {\r\n    global: [],\r\n    globalSummary: {},\r\n    indiaSummary: {},\r\n    assamSummary:{},\r\n    assam: [],\r\n    india: [],\r\n    loading: false,\r\n    error:null\r\n}\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return {...state, loading: action.payload}\r\n        //GLOBAL\r\n\r\n        case ERROR:\r\n            return {...state,error:action.payload}\r\n        case FETCH_GLOBAL:\r\n            // console.log(\"data\",action.payload)\r\n            return {\r\n                ...state,\r\n                global: action.payload.Countries,\r\n                globalSummary: action.payload.Global\r\n            }\r\n\r\n        //INDIA\r\n        case FETCH_INDIA:\r\n            return {\r\n                ...state,\r\n                isLoadingIndia: false,\r\n                india: action.payload.data,\r\n                indiaSummary: action.payload.summary\r\n            }\r\n\r\n        case FETCH_ASSAM:\r\n            return {\r\n                ...state,\r\n                isLoadingIndia: false,\r\n                assam: action.payload.data,\r\n                assamSummary: action.payload.summary\r\n            }\r\n\r\n        default:\r\n            return initialState;\r\n\r\n    }\r\n}\r\n","// import { configureStore } from '@reduxjs/toolkit';\r\n// import counterReducer from '../features/counter/counterSlice';\r\nimport {createStore, applyMiddleware} from \"redux\";\r\nimport {reducer} from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: teal,\r\n        secondary: red,\r\n    },\r\n    status: {\r\n        danger: 'orange',\r\n    },\r\n});\r\n\r\nexport default theme\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {MuiThemeProvider} from \"@material-ui/core\";\r\nimport theme from \"./app/theme\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n\r\n            <MuiThemeProvider theme={theme}>\r\n\r\n                <Provider store={store}>\r\n                    <App/>\r\n                </Provider>\r\n            </MuiThemeProvider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}